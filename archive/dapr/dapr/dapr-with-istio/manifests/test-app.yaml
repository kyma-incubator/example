---
apiVersion: v1
kind: Namespace
metadata:
  labels:
    name: dapr-demo
  name: dapr-demo
---
kind: Service
apiVersion: v1
metadata:
  name: nodeapp
  namespace: dapr-demo
  labels:
    app: node
spec:
  selector:
    app: node
  ports:
  - protocol: TCP
    port: 3000
    targetPort: 3000
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nodeapp
  namespace: dapr-demo
  labels:
    app: node
spec:
  replicas: 1
  selector:
    matchLabels:
      app: node
  template:
    metadata:
      labels:
        app: node
      annotations:
        dapr.io/enabled: "true"
        dapr.io/id: "nodeapp"
        dapr.io/port: "3000"
        traffic.sidecar.istio.io/excludeOutboundPorts: "80,3500,50001,50002,6379"
        traffic.sidecar.istio.io/excludeInboundPorts: "80,3500,50001,50002,6379"
    spec:
      containers:
      - name: node
        image: dapriosamples/hello-k8s-node:0.8.0
        ports:
        - containerPort: 3000
        imagePullPolicy: Always
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: pythonapp
  namespace: dapr-demo
  labels:
    app: python
spec:
  replicas: 1
  selector:
    matchLabels:
      app: python
  template:
    metadata:
      labels:
        app: python
      annotations:
        dapr.io/enabled: "true"
        dapr.io/id: "pythonapp"
        traffic.sidecar.istio.io/excludeOutboundPorts: "80,3500,50001,50002,6379"
        traffic.sidecar.istio.io/excludeInboundPorts: "80,3500,50001,50002,6379"
    spec:
      containers:
      - name: python
        image: dapriosamples/hello-k8s-python:0.8.0
---
apiVersion: gateway.kyma-project.io/v1alpha1
kind: APIRule
metadata:
  labels:
    app: node
  name: nodeapp
  namespace: dapr-demo
spec:
  service:
    host: nodeapp
    name: nodeapp
    port: 3000
  gateway: kyma-gateway.kyma-system.svc.cluster.local
  rules:
    - path: /.*
      methods: ["GET"]
      accessStrategies:
        - handler: allow
      mutators: []
